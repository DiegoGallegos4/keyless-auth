/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MerkleRootStore,
  MerkleRootStoreInterface,
} from "../MerkleRootStore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "verifyMerkleProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061044d8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632eb4a7ab146100515780634783f0ef1461006f578063495906571461008b5780635f044052146100a9575b600080fd5b6100596100d9565b6040516100669190610222565b60405180910390f35b61008960048036038101906100849190610273565b6100df565b005b610093610120565b6040516100a09190610222565b60405180910390f35b6100c360048036038101906100be9190610305565b610129565b6040516100d09190610380565b60405180910390f35b60005481565b806000819055507f90004c04698bc3322499a575ed3752dd4abf33e0a7294c06a787a0fe01bea941816040516101159190610222565b60405180910390a150565b60008054905090565b60008082905060005b858590508110156101f9578585828181106101505761014f61039b565b5b905060200201358210156101a757818686838181106101725761017161039b565b5b9050602002013560405160200161018a9291906103eb565b6040516020818303038152906040528051906020012091506101ec565b8585828181106101ba576101b961039b565b5b90506020020135826040516020016101d39291906103eb565b6040516020818303038152906040528051906020012091505b8080600101915050610132565b5060005481149150509392505050565b6000819050919050565b61021c81610209565b82525050565b60006020820190506102376000830184610213565b92915050565b600080fd5b600080fd5b61025081610209565b811461025b57600080fd5b50565b60008135905061026d81610247565b92915050565b6000602082840312156102895761028861023d565b5b60006102978482850161025e565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126102c5576102c46102a0565b5b8235905067ffffffffffffffff8111156102e2576102e16102a5565b5b6020830191508360208202830111156102fe576102fd6102aa565b5b9250929050565b60008060006040848603121561031e5761031d61023d565b5b600084013567ffffffffffffffff81111561033c5761033b610242565b5b610348868287016102af565b9350935050602061035b8682870161025e565b9150509250925092565b60008115159050919050565b61037a81610365565b82525050565b60006020820190506103956000830184610371565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6103e56103e082610209565b6103ca565b82525050565b60006103f782856103d4565b60208201915061040782846103d4565b602082019150819050939250505056fea2646970667358221220cf93cbf6275474e511f8fe3b03be9f8c0e3e4722f8f7bb9b8c6c9777afb2016864736f6c634300081c0033";

type MerkleRootStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleRootStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleRootStore__factory extends ContractFactory {
  constructor(...args: MerkleRootStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MerkleRootStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MerkleRootStore__factory {
    return super.connect(runner) as MerkleRootStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleRootStoreInterface {
    return new Interface(_abi) as MerkleRootStoreInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MerkleRootStore {
    return new Contract(address, _abi, runner) as unknown as MerkleRootStore;
  }
}
